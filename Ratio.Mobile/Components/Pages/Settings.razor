@page "/settings"

@using Microsoft.Maui.Storage
@using Ratio.Mobile.Services

@inject DatabaseInitializer DbInitializer

<div class="container mt-4">

    <!-- Page Header -->
    <h3 class="mb-4">Setting</h3>

    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <h5 class="card-title">Monte Carlo Simulations</h5>
            <label for="simulationCountInput" class="form-label">Number of Monte Carlo Simulations per Run</label>

            <input type="range" class="form-range" id="simulationCountRange" min="100" max="10000" step="100"
                   @bind="SimulationCount" @bind:event="oninput" />

            <input type="number" id="simulationCountInput" class="form-control mt-2" min="100" max="10000" step="100"
                   @bind="SimulationCount" @bind:event="oninput" />

        </div>
    </div>

    <div class="card mb-4 shadow-sm">
        <div class="card-body text-center">
            <h5 class="card-title">Kill Team Simulator</h5>
            <p class="text-muted">v0.1.0</p>
            <p>Developed by Ghenadie 😎</p>
            <a href="https://github.com/nullv2/Ratio_TFG">Github repo 💻</a>
        </div>
    </div>

    <div class="card mb-4 shadow-sm d-grid">
        <div class="card-body">
            <h5 class="card-title">Danger Zone</h5>
            <p class="text-danger">Resetting the database will remove all data and reseed it from scratch.</p>
        </div>
        <button class="btn btn-danger" @onclick="ResetDatabaseAsync">Reset Database</button>

        @if (!string.IsNullOrEmpty(ResetMessage))
        {
            <div class="alert alert-success mt-2">@ResetMessage</div>
        }
    </div>

    <hr />


    <div class="d-grid">
        <button class="btn btn-dark btn-lg" @onclick="SaveSettings">Save Settings</button>
    </div>
</div>

@code {
    private int SimulationCount { get; set; }
    private string? ResetMessage;

    protected override void OnInitialized()
    {
        SimulationCount = Preferences.Get("SimulationCount", 1000);
    }

    private void SaveSettings()
    {
        Preferences.Set("SimulationCount", SimulationCount);
    }

    private async void ResetDatabaseAsync()
    {
        await DbInitializer.ResetDBAsync();
        ResetMessage = "Database has been reset successfully.";
    }
}
